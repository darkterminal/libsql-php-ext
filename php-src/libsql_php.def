# DON'T REMOVE THIS F "C" K DEFINITION
typedef struct Database Database;
typedef struct Connection Connection;

typedef struct DbConnPair {
    Database *db;
    Connection *conn;
} DbConnPair;

struct DbConnPair *libsql_php_connect_new_remote_replica(const char *path,
                                                         const char *url,
                                                         const char *token,
                                                         uintptr_t sync_duration,
                                                         int read_your_writes);

int32_t libsql_php_sync(struct DbConnPair *pair);

void* libsql_php_connect_local(const char *path,
                                     const char *flags,
                                     const char *encryption_key);
void libsql_php_close(void* ptr);

const char *libsql_php_query(void *client_ptr,
                             const char *query,
                             const char *const *query_params,
                             uintptr_t query_params_len);

const int64_t *libsql_php_exec(void *client_ptr,
                               const char *query,
                               const char *const *query_params,
                               uintptr_t query_params_len);

const int *libsql_php_execute_batch(void *client_ptr, const char *query);

const uint64_t *libsql_php_affected_rows(void *client_ptr);

const int *libsql_php_reset(void *client_ptr);

const char *libsql_version(void);

int64_t libsql_php_is_autocommit(void *client_ptr);

int64_t libsql_php_last_insert_rowid(void *client_ptr);

void *libsql_php_transaction(void *client_ptr, const char *behavior);

void *libsql_php_transaction_exec(void *trx_ptr,
                                         const char *query,
                                         const char *const *query_params,
                                         uintptr_t query_params_len);

int64_t libsql_php_transaction_commit(void *trx_ptr);

int64_t libsql_php_transaction_rollback(void *trx_ptr);

void free(void* ptr);
